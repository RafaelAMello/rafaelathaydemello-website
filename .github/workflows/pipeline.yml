name: Deplpoy Streamlit

on:
  push:
    branches: [ main ]

jobs:
  deploy_ecr:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2

    - name: Deploy Ecr to aws
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: streamlit-app
        template: ops/cloudformation/streamlit-app.yaml
        no-fail-on-empty-changeset: "1"

  build_and_push_docker:
    needs: deploy_ecr
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: personal-website/streamlit-app
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  deploy_app:
    needs: build_and_push_docker
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: "Deploy app to AWS"
      run: |
        cd ops/cdk
        docker build . -t cdk-deploy
        docker run \
        -e AWS_REGION=ap-southeast-2 \
        -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
        -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
        cdk-deploy
